version: 2.1

workflows:
  version: 2
  test:
    jobs:
      - package_nois
      - lint

  deploy:
    jobs:
      - build_wasm
      - publish_npm:
          requires:
            - build_wasm

jobs:
  package_nois:
    docker:
      - image: rust:1.63.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-nois:1.63.0-{{ checksum "~/project/Cargo.lock" }}
            - cargocache-v2-nois:1.63.0-
      - run:
          name: Build library for native target (default features)
          command: cargo build --locked
      - run:
          name: Build library for native target (all features)
          command: cargo build --locked --features js
      - run:
          name: Build library for Wasm target
          command: cargo build --target wasm32-unknown-unknown --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Run unit tests (js feature enabled)
          command: cargo test --locked --features js
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-nois:1.63.0-{{ checksum "~/project/Cargo.lock" }}
  lint:
    docker:
      - image: rust:1.63.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.63.0-{{ checksum "Cargo.lock" }}
            - cargocache-v2-lint-rust:1.63.0-
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.63.0-{{ checksum "Cargo.lock" }}

  build_wasm:
    docker:
        - image: rust:1.63.0
    working_directory: ~/project
    #if: github.event_name == 'tag' #will uncommoent after test
    steps:
      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      #- run: apt update && apt install -y  npm
      - checkout:
          path: ~/project
      - run: wasm-pack build --target web -- --features js
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - pkg/*
  publish_npm:
    docker:
        - image: node:18.12.1-slim

    steps:
      - attach_workspace:
          at: ./
      - run:
          name: publish npm
          command: env && cd pkg && npm publish --auth-token=$NPM_TOKEN
          env:
            NPM_TOKEN: ${NPM_TOKEN}
